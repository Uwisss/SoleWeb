import React, { useState, useEffect, useRef } from 'react';
import { Head, Link, usePage } from '@inertiajs/react';
import { FaChevronLeft, FaChevronRight, FaStar, FaRegStar, FaShare, FaPrint, FaHeart, FaRegHeart, FaFacebookF, FaTwitter, FaPinterestP, FaWhatsapp, FaEnvelope, FaStarHalfAlt, FaChevronDown, FaChevronUp, FaMapMarkerAlt, FaCalendarAlt, FaClock, FaUsers, FaShip, FaBed, FaUtensils, FaSwimmingPool, FaWifi, FaTv, FaSnowflake, FaWineGlassAlt, FaTshirt, FaSpa, FaDumbbell, FaChild, FaBriefcaseMedical, FaBan, FaSmokingBan, FaWheelchair, FaInfoCircle, FaRegClock, FaRegCalendarAlt, FaRegUser, FaRegCreditCard, FaRegQuestionCircle, FaRegEnvelope, FaPhoneAlt, FaMapMarkedAlt, FaRegFilePdf, FaDownload, FaTimes, FaRegCalendarPlus, FaSearch, FaPlus, FaMinus, FaThumbsUp, FaExternalLinkAlt, FaQuestionCircle, FaPaperPlane } from 'react-icons/fa';
import MainLayout from '@/Layouts/MainLayout';
import PageContainer from '@/Components/PageContainer';

export default function Show({ cruise }) {
    const [activeTab, setActiveTab] = useState('overview');
    const [currentImageIndex, setCurrentImageIndex] = useState(0);
    const [isFavorite, setIsFavorite] = useState(false);
    const [showShareMenu, setShowShareMenu] = useState(false);
    const [selectedCabin, setSelectedCabin] = useState(null);
    const [expandedSections, setExpandedSections] = useState({
        inclusions: false,
        exclusions: false,
        itinerary: {},
        faq: false
    });

    // Sample cruise data - replace with actual data from props
    const cruiseData = {
        id: 1,
        title: 'Mediterranean Dream Cruise',
        cruiseLine: 'Royal Caribbean',
        ship: 'Symphony of the Seas',
        duration: '7 Nights',
        departureDate: 'June 15, 2024',
        returnDate: 'June 22, 2024',
        departurePort: 'Barcelona, Spain',
        ports: ['Barcelona', 'Palma de Mallorca', 'Marseille', 'La Spezia', 'Civitavecchia', 'Naples'],
        rating: 4.7,
        reviewCount: 128,
        price: 1299,
        originalPrice: 1599,
        discount: 19,
        description: 'Experience the best of the Mediterranean on this luxurious 7-night cruise. Visit stunning ports, enjoy world-class entertainment, and indulge in exquisite dining options.',
        highlights: [
            'Visit 6 beautiful Mediterranean destinations',
            'All-inclusive dining with premium options',
            'World-class entertainment and activities',
            'Luxury accommodations with ocean views',
            'Unlimited drinks package available'
        ],
        inclusions: [
            '7-night cruise accommodation',
            'All meals in main dining rooms and buffet',
            'Onboard entertainment and activities',
            'Port taxes and fees',
            '24-hour room service',
            'Access to pools and fitness center',
            'Kids and teens programs',
            'Live music and shows'
        ],
        exclusions: [
            'Airfare and airport transfers',
            'Shore excursions',
            'Spa treatments',
            'Premium dining restaurants',
            'Alcoholic and specialty beverages',
            'Gratuities',
            'Travel insurance',
            'Personal expenses'
        ],
        cabinTypes: [
            {
                id: 'inside',
                name: 'Interior Stateroom',
                description: 'Cozy interior stateroom with all the essentials for a comfortable stay.',
                size: '150 sq ft',
                occupancy: 'Up to 4 guests',
                price: 1299,
                originalPrice: 1599,
                image: 'https://example.com/inside-cabin.jpg'
            },
            {
                id: 'oceanview',
                name: 'Ocean View Stateroom',
                description: 'Comfortable stateroom with a large window offering ocean views.',
                size: '180 sq ft',
                occupancy: 'Up to 4 guests',
                price: 1599,
                originalPrice: 1899,
                image: 'https://example.com/oceanview-cabin.jpg',
                bestValue: true
            },
            {
                id: 'balcony',
                name: 'Balcony Stateroom',
                description: 'Spacious stateroom with a private balcony to enjoy the ocean breeze.',
                size: '220 sq ft',
                balcony: '55 sq ft',
                occupancy: 'Up to 4 guests',
                price: 1999,
                originalPrice: 2299,
                image: 'https://example.com/balcony-cabin.jpg'
            },
            {
                id: 'suite',
                name: 'Grand Suite',
                description: 'Luxurious suite with separate living area, large balcony, and premium amenities.',
                size: '400 sq ft',
                balcony: '100 sq ft',
                occupancy: 'Up to 4 guests',
                price: 3499,
                originalPrice: 3999,
                image: 'https://example.com/suite-cabin.jpg',
                isSuite: true
            }
        ],
        images: [
            {
                id: 1,
                url: 'https://example.com/cruise-main.jpg',
                alt: 'Symphony of the Seas exterior',
                isFeatured: true
            },
            {
                id: 2,
                url: 'https://example.com/cruise-pool.jpg',
                alt: 'Main pool deck',
                isFeatured: false
            },
            {
                id: 3,
                url: 'https://example.com/cruise-dining.jpg',
                alt: 'Main dining room',
                isFeatured: false
            },
            {
                id: 4,
                url: 'https://example.com/cruise-cabin.jpg',
                alt: 'Luxury stateroom',
                isFeatured: false
            },
            {
                id: 5,
                url: 'https://example.com/cruise-entertainment.jpg',
                alt: 'Onboard entertainment',
                isFeatured: false
            }
        ],
        itinerary: [
            {
                day: 1,
                port: 'Barcelona, Spain',
                arrival: 'Embark',
                departure: '5:00 PM',
                description: 'Begin your Mediterranean adventure in the vibrant city of Barcelona. Board the ship and settle into your stateroom before setting sail.'
            },
            {
                day: 2,
                port: 'At Sea',
                description: 'Spend the day at sea enjoying the ship\'s amenities. Relax by the pool, enjoy spa treatments, or participate in onboard activities.'
            },
            {
                day: 3,
                port: 'Palma de Mallorca, Spain',
                arrival: '8:00 AM',
                departure: '6:00 PM',
                description: 'Explore the beautiful island of Mallorca with its stunning beaches, historic architecture, and charming old town.'
            },
            {
                day: 4,
                port: 'Marseille, France',
                arrival: '7:00 AM',
                departure: '5:00 PM',
                description: 'Discover the vibrant port city of Marseille, known for its rich history, delicious cuisine, and the iconic Notre-Dame de la Garde.'
            },
            {
                day: 5,
                port: 'La Spezia, Italy',
                arrival: '8:00 AM',
                departure: '8:00 PM',
                description: 'Gateway to the stunning Cinque Terre and the historic city of Pisa. Don\'t miss the Leaning Tower!' 
            },
            {
                day: 6,
                port: 'Civitavecchia (Rome), Italy',
                arrival: '7:00 AM',
                departure: '8:00 PM',
                description: 'A full day to explore the Eternal City. Visit the Colosseum, Vatican City, Trevi Fountain, and other iconic landmarks.'
            },
            {
                day: 7,
                port: 'Naples, Italy',
                arrival: '7:00 AM',
                departure: '6:00 PM',
                description: 'Visit the ruins of Pompeii, hike Mount Vesuvius, or explore the beautiful Amalfi Coast.'
            },
            {
                day: 8,
                port: 'Barcelona, Spain',
                arrival: '6:00 AM',
                departure: 'Disembark',
                description: 'Return to Barcelona with unforgettable memories of your Mediterranean adventure.'
            }
        ],
        amenities: [
            { name: 'Swimming Pools', icon: 'pool' },
            { name: 'Spa & Wellness', icon: 'spa' },
            { name: 'Fitness Center', icon: 'fitness' },
            { name: 'Kids Club', icon: 'child' },
            { name: 'Casino', icon: 'casino' },
            { name: 'Broadway Shows', icon: 'theater' },
            { name: 'Multiple Restaurants', icon: 'restaurant' },
            { name: 'Bars & Lounges', icon: 'local_bar' },
            { name: 'Sports Court', icon: 'sports_basketball' },
            { name: 'Rock Climbing', icon: 'alt_route' },
            { name: 'Water Slides', icon: 'water' },
            { name: 'Mini Golf', icon: 'sports_golf' }
        ],
        deckPlan: {
            decks: [
                { number: 18, name: 'Sports Deck' },
                { number: 17, name: 'Pool Deck' },
                { number: 16, name: 'Sun Deck' },
                { number: 15, name: 'Lido Deck' },
                { number: 14, name: 'Promenade Deck' },
                { number: 13, name: 'Fitness Deck' },
                { number: 12, name: 'Spa Deck' },
                { number: 11, name: 'Bridge Deck' },
                { number: 10, name: 'Panorama Deck' },
                { number: 9, name: 'Vista Deck' },
                { number: 8, name: 'Empress Deck' },
                { number: 7, name: 'Upper Deck' },
                { number: 6, name: 'Main Deck' },
                { number: 5, name: 'Lower Deck' }
            ],
            image: 'https://example.com/deck-plan.jpg',
            pdf: 'https://example.com/deck-plan.pdf'
        },
        reviews: [
            {
                id: 1,
                author: 'John D.',
                rating: 5,
                date: '2024-05-15',
                title: 'Amazing Mediterranean Cruise!',
                content: 'This was our first cruise and it exceeded all our expectations. The ship is beautiful, the staff was amazing, and the ports were perfect. We can\'t wait to book our next cruise!' 
            },
            {
                id: 2,
                author: 'Sarah M.',
                rating: 4,
                date: '2024-04-22',
                title: 'Great experience overall',
                content: 'We had a wonderful time on this cruise. The food was excellent, especially in the specialty restaurants. The only downside was that some of the shore excursions were a bit rushed.'
            },
            {
                id: 3,
                author: 'Michael T.',
                rating: 5,
                date: '2024-03-10',
                title: 'Perfect family vacation',
                content: 'Traveled with our two kids (8 and 12) and they had the time of their lives. The kids club was fantastic and gave us some much-needed adult time. The ship has something for everyone!'
            }
        ],
        faqs: [
            {
                question: 'What is the dress code on board?',
                answer: 'During the day, resort casual attire is appropriate. In the evenings, most restaurants have a smart casual dress code. There are usually 1-2 formal nights per 7-night cruise where formal attire is encouraged but not required.'
            },
            {
                question: 'Is Wi-Fi available on board?',
                answer: 'Yes, Wi-Fi packages are available for purchase. We offer different plans including social media, surf, and stream options. Pre-purchase online for a discount.'
            },
            {
                question: 'Can I bring my own alcohol on board?',
                answer: 'Guests are not permitted to bring alcoholic beverages on board for consumption. Any alcoholic beverages found in luggage will be removed and returned at the end of the cruise.'
            },
            {
                question: 'What is the cancellation policy?',
                answer: 'Cancellation policies vary based on the fare type and time of cancellation. Generally, you can cancel up to 75 days before departure for a full refund (excluding non-refundable deposits). Closer to departure, cancellation fees apply.'
            },
            {
                question: 'Are there laundry facilities on board?',
                answer: 'Yes, self-service launderettes are available on certain decks. Full-service laundry and dry cleaning are also available for a fee.'
            }
        ]
    };

    // Set default selected cabin (first available)
    useEffect(() => {
        if (cruiseData.cabinTypes.length > 0 && !selectedCabin) {
            setSelectedCabin(cruiseData.cabinTypes[0].id);
        }
    }, []);

    const toggleFavorite = () => {
        setIsFavorite(!isFavorite);
        // Here you would typically make an API call to update the favorite status
    };

    const toggleShareMenu = () => {
        setShowShareMenu(!showShareMenu);
    };

    const handleShare = (platform) => {
        let url = '';
        const shareUrl = window.location.href;
        const title = `Check out this cruise: ${cruiseData.title}`;
        
        switch(platform) {
            case 'facebook':
                url = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareUrl)}`;
                break;
            case 'twitter':
                url = `https://twitter.com/intent/tweet?url=${encodeURIComponent(shareUrl)}&text=${encodeURIComponent(title)}`;
                break;
            case 'pinterest':
                // Pinterest requires a media URL
                const mediaUrl = cruiseData.images[0]?.url || '';
                url = `https://pinterest.com/pin/create/button/?url=${encodeURIComponent(shareUrl)}&media=${encodeURIComponent(mediaUrl)}&description=${encodeURIComponent(title)}`;
                break;
            case 'whatsapp':
                url = `https://wa.me/?text=${encodeURIComponent(`${title} - ${shareUrl}`)}`;
                break;
            case 'email':
                url = `mailto:?subject=${encodeURIComponent(title)}&body=${encodeURIComponent(`${title}\n\n${shareUrl}`)}`;
                break;
            default:
                return;
        }
        
        window.open(url, '_blank', 'noopener,noreferrer');
    };

    const nextImage = () => {
        setCurrentImageIndex((prevIndex) => 
            prevIndex === cruiseData.images.length - 1 ? 0 : prevIndex + 1
        );
    };

    const prevImage = () => {
        setCurrentImageIndex((prevIndex) =>
            prevIndex === 0 ? cruiseData.images.length - 1 : prevIndex - 1
        );
    };

    const selectImage = (index) => {
        setCurrentImageIndex(index);
    };

    const toggleSection = (section) => {
        if (section === 'inclusions' || section === 'exclusions') {
            setExpandedSections(prev => ({
                ...prev,
                [section]: !prev[section]
            }));
        } else {
            // For itinerary days
            setExpandedSections(prev => ({
                ...prev,
                itinerary: {
                    ...prev.itinerary,
                    [section]: !prev.itinerary[section]
                }
            }));
        }
    };

    const renderRatingStars = (rating) => {
        const stars = [];
        const fullStars = Math.floor(rating);
        const hasHalfStar = rating % 1 >= 0.5;
        
        for (let i = 1; i <= 5; i++) {
            if (i <= fullStars) {
                stars.push(<FaStar key={i} className="text-yellow-400" />);
            } else if (i === fullStars + 1 && hasHalfStar) {
                stars.push(<FaStar key={i} className="text-yellow-400" style={{ opacity: 0.5 }} />);
            } else {
                stars.push(<FaRegStar key={i} className="text-yellow-400" />);
            }
        }
        
        return stars;
    };

    const formatPrice = (price) => {
        return new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'USD',
            maximumFractionDigits: 0
        }).format(price);
    };

    const renderTabContent = () => {
        switch(activeTab) {
            case 'overview':
                return (
                    <div>
                        <h2 className="text-2xl font-bold mb-6">Cruise Overview</h2>
                        <div className="prose max-w-none">
                            <p className="text-gray-700 mb-6">{cruiseData.description}</p>
                            
                            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
                                <div className="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
                                    <div className="flex items-center mb-2">
                                        <FaShip className="text-blue-600 mr-2" />
                                        <h3 className="font-semibold">Ship</h3>
                                    </div>
                                    <p className="text-gray-700">{cruiseData.ship}</p>
                                </div>
                                
                                <div className="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
                                    <div className="flex items-center mb-2">
                                        <FaCalendarAlt className="text-blue-600 mr-2" />
                                        <h3 className="font-semibold">Duration</h3>
                                    </div>
                                    <p className="text-gray-700">{cruiseData.duration}</p>
                                </div>
                                
                                <div className="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
                                    <div className="flex items-center mb-2">
                                        <FaMapMarkerAlt className="text-blue-600 mr-2" />
                                        <h3 className="font-semibold">Departure</h3>
                                    </div>
                                    <p className="text-gray-700">{cruiseData.departurePort}</p>
                                </div>
                                
                                <div className="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
                                    <div className="flex items-center mb-2">
                                        <FaUsers className="text-blue-600 mr-2" />
                                        <h3 className="font-semibold">Passenger Capacity</h3>
                                    </div>
                                    <p className="text-gray-700">{cruiseData.passengerCapacity?.toLocaleString() || 'N/A'}</p>
                                </div>
                                
                                <div className="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
                                    <div className="flex items-center mb-2">
                                        <FaCalendarDay className="text-blue-600 mr-2" />
                                        <h3 className="font-semibold">Next Departure</h3>
                                    </div>
                                    <p className="text-gray-700">{cruiseData.departureDate}</p>
                                </div>
                                
                                <div className="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
                                    <div className="flex items-center mb-2">
                                        <FaStar className="text-blue-600 mr-2" />
                                        <h3 className="font-semibold">Rating</h3>
                                    </div>
                                    <div className="flex items-center">
                                        {renderRatingStars(cruiseData.rating)}
                                        <span className="ml-2 text-gray-700">{cruiseData.rating} ({cruiseData.reviewCount} reviews)</span>
                                    </div>
                                </div>
                            </div>
                            
                            <div className="mb-8">
                                <h3 className="text-xl font-semibold mb-4">What's Included</h3>
                                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div>
                                        <h4 className="font-medium text-gray-800 mb-2">Included Amenities</h4>
                                        <ul className="space-y-2">
                                            {cruiseData.includedAmenities?.map((amenity, index) => (
                                                <li key={index} className="flex items-start">
                                                    <FaCheckCircle className="text-green-500 mt-1 mr-2 flex-shrink-0" />
                                                    <span>{amenity}</span>
                                                </li>
                                            ))}
                                        </ul>
                                    </div>
                                    <div>
                                        <h4 className="font-medium text-gray-800 mb-2">Not Included</h4>
                                        <ul className="space-y-2">
                                            {cruiseData.notIncluded?.map((item, index) => (
                                                <li key={index} className="flex items-start">
                                                    <FaTimesCircle className="text-red-500 mt-1 mr-2 flex-shrink-0" />
                                                    <span>{item}</span>
                                                </li>
                                            ))}
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            
                            <div className="mb-8">
                                <h3 className="text-xl font-semibold mb-4">Itinerary Highlights</h3>
                                <div className="space-y-6">
                                    {cruiseData.itinerary?.slice(0, 3).map((day, index) => (
                                        <div key={index} className="bg-white p-4 rounded-lg shadow-sm border border-gray-100">
                                            <div className="flex items-start">
                                                <div className="bg-blue-100 text-blue-800 rounded-full w-10 h-10 flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                    <span className="font-semibold">Day {day.day}</span>
                                                </div>
                                                <div>
                                                    <h4 className="font-medium text-lg">{day.port}</h4>
                                                    <p className="text-gray-600 text-sm">{day.date} • {day.arrival} - {day.departure}</p>
                                                    <p className="mt-2 text-gray-700">
                                                        {day.description.length > 200 
                                                            ? `${day.description.substring(0, 200)}...` 
                                                            : day.description}
                                                    </p>
                                                    {day.highlights && day.highlights.length > 0 && (
                                                        <div className="mt-2">
                                                            <span className="text-sm font-medium text-gray-700">Highlights:</span>
                                                            <ul className="list-disc list-inside text-sm text-gray-600 ml-2">
                                                                {day.highlights.map((highlight, idx) => (
                                                                    <li key={idx}>{highlight}</li>
                                                                ))}
                                                            </ul>
                                                        </div>
                                                    )}
                                                </div>
                                            </div>
                                        </div>
                                    ))}
                                </div>
                                <div className="mt-6 text-center">
                                    <button 
                                        onClick={() => setActiveTab('itinerary')}
                                        className="text-blue-600 hover:text-blue-800 font-medium flex items-center justify-center mx-auto"
                                    >
                                        View Full Itinerary <FaArrowRight className="ml-2" />
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                );
                
            case 'itinerary':
                return (
                    <div>
                        <h2 className="text-2xl font-bold mb-6">Full Itinerary</h2>
                        <div className="space-y-6">
                            {cruiseData.itinerary?.map((day, index) => (
                                <div key={index} className="bg-white p-6 rounded-lg shadow-sm border border-gray-100">
                                    <div className="flex flex-col md:flex-row md:items-center justify-between mb-4 pb-4 border-b border-gray-100">
                                        <div>
                                            <h3 className="text-xl font-semibold">Day {day.day}: {day.port}</h3>
                                            <p className="text-gray-600">{day.date} • {day.arrival} - {day.departure}</p>
                                        </div>
                                        <div className="mt-2 md:mt-0">
                                            <span className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                                                {day.type === 'sea' ? 'Sea Day' : 'Port Day'}
                                            </span>
                                        </div>
                                    </div>
                                    
                                    <div className="prose max-w-none">
                                        <p className="text-gray-700 mb-4">{day.description}</p>
                                        
                                        {day.highlights && day.highlights.length > 0 && (
                                            <div className="mb-4">
                                                <h4 className="font-semibold text-gray-800 mb-2">Highlights:</h4>
                                                <ul className="list-disc pl-5 space-y-1 text-gray-700">
                                                    {day.highlights.map((highlight, idx) => (
                                                        <li key={idx}>{highlight}</li>
                                                    ))}
                                                </ul>
                                            </div>
                                        )}
                                        
                                        {day.activities && day.activities.length > 0 && (
                                            <div className="mb-4">
                                                <h4 className="font-semibold text-gray-800 mb-2">Featured Activities:</h4>
                                                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                                                    {day.activities.map((activity, idx) => (
                                                        <div key={idx} className="border border-gray-200 rounded-lg p-3">
                                                            <div className="flex items-start">
                                                                {activity.type === 'excursion' && (
                                                                    <FaUmbrellaBeach className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                                                                )}
                                                                {activity.type === 'dining' && (
                                                                    <FaUtensils className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                                                                )}
                                                                {activity.type === 'entertainment' && (
                                                                    <FaTheaterMasks className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                                                                )}
                                                                {!['excursion', 'dining', 'entertainment'].includes(activity.type) && (
                                                                    <FaStar className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                                                                )}
                                                                <div>
                                                                    <h5 className="font-medium">{activity.title}</h5>
                                                                    {activity.time && (
                                                                        <p className="text-sm text-gray-600">{activity.time}</p>
                                                                    )}
                                                                    {activity.price && (
                                                                        <p className="text-sm font-medium text-blue-600">
                                                                            {activity.price === 0 ? 'Included' : `From $${activity.price}`}
                                                                        </p>
                                                                    )}
                                                                </div>
                                                            </div>
                                                        </div>
                                                    ))}
                                                </div>
                                            </div>
                                        )}
                                        
                                        {day.note && (
                                            <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4 mt-4">
                                                <div className="flex">
                                                    <div className="flex-shrink-0">
                                                        <FaInfoCircle className="h-5 w-5 text-yellow-400" aria-hidden="true" />
                                                    </div>
                                                    <div className="ml-3">
                                                        <p className="text-sm text-yellow-700">{day.note}</p>
                                                    </div>
                                                </div>
                                            </div>
                                        )}
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                );
                
            case 'cabins':
                return (
                    <div>
                        <h2 className="text-2xl font-bold mb-6">Cabins & Suites</h2>
                        
                        <div className="mb-8">
                            <div className="flex flex-wrap gap-2 mb-6">
                                {['All', 'Interior', 'Ocean View', 'Balcony', 'Suite'].map((type) => (
                                    <button
                                        key={type}
                                        onClick={() => setCabinFilter(type === 'All' ? '' : type)}
                                        className={`px-4 py-2 rounded-full text-sm font-medium ${
                                            cabinFilter === (type === 'All' ? '' : type)
                                                ? 'bg-blue-600 text-white'
                                                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                                        }`}
                                    >
                                        {type}
                                    </button>
                                ))}
                            </div>
                            
                            <div className="space-y-6">
                                {cruiseData.cabinTypes
                                    .filter(cabin => !cabinFilter || cabin.type === cabinFilter)
                                    .map((cabin) => (
                                        <div key={cabin.id} className="border border-gray-200 rounded-lg overflow-hidden">
                                            <div className="md:flex">
                                                <div className="md:w-1/3">
                                                    <img 
                                                        src={cabin.image} 
                                                        alt={`${cabin.name} cabin`} 
                                                        className="w-full h-48 md:h-full object-cover"
                                                    />
                                                </div>
                                                <div className="p-6 md:w-2/3">
                                                    <div className="flex justify-between items-start">
                                                        <div>
                                                            <h3 className="text-xl font-semibold">{cabin.name}</h3>
                                                            <p className="text-gray-600 mb-2">Sleeps up to {cabin.capacity} guests</p>
                                                            <div className="flex items-center mb-4">
                                                                <span className="inline-block px-2 py-1 text-xs font-semibold rounded bg-blue-100 text-blue-800 mr-2">
                                                                    {cabin.type}
                                                                </span>
                                                                <span className="text-sm text-gray-600">
                                                                    {cabin.size} sq ft • {cabin.balcony ? 'With Balcony' : 'No Balcony'}
                                                                </span>
                                                            </div>
                                                        </div>
                                                        <div className="text-right">
                                                            <div className="text-2xl font-bold text-blue-600">
                                                                {formatPrice(cabin.price)}
                                                            </div>
                                                            <div className="text-sm text-gray-500">per person</div>
                                                        </div>
                                                    </div>
                                                    
                                                    <p className="text-gray-700 mb-4">{cabin.description}</p>
                                                    
                                                    <div className="mb-4">
                                                        <h4 className="font-medium text-gray-800 mb-2">Amenities:</h4>
                                                        <div className="flex flex-wrap gap-2">
                                                            {cabin.amenities.map((amenity, idx) => (
                                                                <span key={idx} className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                                                    {amenity}
                                                                </span>
                                                            ))}
                                                        </div>
                                                    </div>
                                                    
                                                    <div className="flex flex-col sm:flex-row sm:items-center justify-between mt-6 gap-4">
                                                        <button 
                                                            onClick={() => setSelectedCabin(cabin.id)}
                                                            className="px-4 py-2 border border-blue-600 text-blue-600 rounded-md hover:bg-blue-50 transition-colors font-medium"
                                                        >
                                                            Select Cabin
                                                        </button>
                                                        <button 
                                                            onClick={() => setExpandedCabin(expandedCabin === cabin.id ? null : cabin.id)}
                                                            className="text-blue-600 hover:text-blue-800 font-medium flex items-center justify-center"
                                                        >
                                                            {expandedCabin === cabin.id ? 'Show Less' : 'View Details'}
                                                            {expandedCabin === cabin.id ? (
                                                                <FaChevronUp className="ml-1" />
                                                            ) : (
                                                                <FaChevronDown className="ml-1" />
                                                            )}
                                                        </button>
                                                    </div>
                                                    
                                                    {expandedCabin === cabin.id && (
                                                        <div className="mt-4 pt-4 border-t border-gray-200">
                                                            <h4 className="font-medium text-gray-800 mb-3">Detailed Information:</h4>
                                                            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                                                <div>
                                                                    <h5 className="font-medium text-gray-700 mb-1">Cabin Features</h5>
                                                                    <ul className="text-sm text-gray-600 space-y-1">
                                                                        <li className="flex items-start">
                                                                            <FaBed className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                                                                            <span>{cabin.beds} {cabin.beds > 1 ? 'beds' : 'bed'}</span>
                                                                        </li>
                                                                        {cabin.balcony && (
                                                                            <li className="flex items-start">
                                                                                <FaDoorOpen className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                                                                                <span>Private balcony</span>
                                                                            </li>
                                                                        )}
                                                                        {cabin.bathroom && (
                                                                            <li className="flex items-start">
                                                                                <FaShower className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                                                                                <span>Private bathroom with {cabin.bathroom}</span>
                                                                            </li>
                                                                        )}
                                                                        {cabin.tv && (
                                                                            <li className="flex items-start">
                                                                                <FaTv className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                                                                                <span>Flat-screen TV</span>
                                                                            </li>
                                                                        )}
                                                                    </ul>
                                                                </div>
                                                                <div>
                                                                    <h5 className="font-medium text-gray-700 mb-1">Services</h5>
                                                                    <ul className="text-sm text-gray-600 space-y-1">
                                                                        <li className="flex items-start">
                                                                            <FaUserTie className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                                                                            <span>Dedicated stateroom attendant</span>
                                                                        </li>
                                                                        <li className="flex items-start">
                                                                            <FaBed className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                                                                            <span>Twice-daily housekeeping service</span>
                                                                        </li>
                                                                        <li className="flex items-start">
                                                                            <FaConciergeBell className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                                                                            <span>24-hour room service</span>
                                                                        </li>
                                                                        {cabin.priorityBoarding && (
                                                                            <li className="flex items-start">
                                                                                <FaStar className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                                                                                <span>Priority boarding and departure</span>
                                                                            </li>
                                                                        )}
                                                                    </ul>
                                                                </div>
                                                            </div>
                                                            
                                                            {cabin.note && (
                                                                <div className="mt-4 bg-blue-50 border-l-4 border-blue-400 p-4">
                                                                    <div className="flex">
                                                                        <div className="flex-shrink-0">
                                                                            <FaInfoCircle className="h-5 w-5 text-blue-400" />
                                                                        </div>
                                                                        <div className="ml-3">
                                                                            <p className="text-sm text-blue-700">{cabin.note}</p>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            )}
                                                        </div>
                                                    )}
                                                </div>
                                            </div>
                                        </div>
                                    ))}
                            </div>
                        </div>
                        
                        <div className="bg-blue-50 p-6 rounded-lg">
                            <h3 className="text-xl font-semibold mb-4">Need help choosing a cabin?</h3>
                            <p className="mb-4">Our cruise specialists are here to help you find the perfect stateroom for your vacation. Contact us for personalized recommendations based on your preferences and budget.</p>
                            <button className="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-md transition-colors">
                                Contact a Cruise Specialist
                            </button>
                        </div>
                    </div>
                );
                
            case 'deck-plan':
                return (
                    <div>
                        <h2 className="text-2xl font-bold mb-6">Deck Plan</h2>
                        
                        <div className="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden mb-6">
                            <div className="p-4 border-b border-gray-200 bg-gray-50">
                                <div className="flex flex-wrap items-center justify-between">
                                    <h3 className="text-lg font-semibold">{cruiseData.ship} Deck Plan</h3>
                                    <div className="flex items-center space-x-2">
                                        <button 
                                            onClick={() => window.print()}
                                            className="flex items-center text-sm text-gray-600 hover:text-gray-900"
                                        >
                                            <FaPrint className="mr-1" /> Print
                                        </button>
                                        <a 
                                            href="#" 
                                            className="flex items-center text-sm text-blue-600 hover:text-blue-800"
                                            onClick={(e) => {
                                                e.preventDefault();
                                                // In a real app, this would download the PDF
                                                alert('Downloading deck plan PDF...');
                                            }}
                                        >
                                            <FaDownload className="mr-1" /> Download PDF
                                        </a>
                                    </div>
                                </div>
                            </div>
                            
                            <div className="p-4">
                                <div className="flex flex-col md:flex-row gap-6">
                                    {/* Deck Selector */}
                                    <div className="w-full md:w-48 flex-shrink-0">
                                        <label htmlFor="deck-select" className="block text-sm font-medium text-gray-700 mb-2">
                                            Select Deck
                                        </label>
                                        <select 
                                            id="deck-select"
                                            className="w-full border border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                            value={selectedDeck}
                                            onChange={(e) => setSelectedDeck(e.target.value)}
                                        >
                                            {cruiseData.deckPlan?.decks.map((deck) => (
                                                <option key={deck.name} value={deck.name}>
                                                    {deck.name} - {deck.type}
                                                </option>
                                            ))}
                                        </select>
                                        
                                        <div className="mt-4">
                                            <h4 className="text-sm font-medium text-gray-700 mb-2">Legend</h4>
                                            <ul className="space-y-2">
                                                <li className="flex items-center">
                                                    <span className="w-4 h-4 bg-blue-500 mr-2"></span>
                                                    <span className="text-sm text-gray-600">Staterooms</span>
                                                </li>
                                                <li className="flex items-center">
                                                    <span className="w-4 h-4 bg-yellow-400 mr-2"></span>
                                                    <span className="text-sm text-gray-600">Public Areas</span>
                                                </li>
                                                <li className="flex items-center">
                                                    <span className="w-4 h-4 bg-green-500 mr-2"></span>
                                                    <span className="text-sm text-gray-600">Dining</span>
                                                </li>
                                                <li className="flex items-center">
                                                    <span className="w-4 h-4 bg-red-500 mr-2"></span>
                                                    <span className="text-sm text-gray-600">Entertainment</span>
                                                </li>
                                                <li className="flex items-center">
                                                    <span className="w-4 h-4 bg-purple-500 mr-2"></span>
                                                    <span className="text-sm text-gray-600">Recreation</span>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                    
                                    {/* Deck Plan Image */}
                                    <div className="flex-1 overflow-auto">
                                        <div className="bg-gray-100 rounded-lg p-4 flex justify-center">
                                            {selectedDeckImage ? (
                                                <img 
                                                    src={selectedDeckImage} 
                                                    alt={`${selectedDeck} deck plan`} 
                                                    className="max-w-full h-auto border border-gray-200"
                                                    useMap="#deckPlanMap"
                                                />
                                            ) : (
                                                <div className="py-12 text-center text-gray-500">
                                                    <FaImage className="mx-auto h-12 w-12 mb-2" />
                                                    <p>Deck plan image not available</p>
                                                </div>
                                            )}
                                        </div>
                                        
                                        {/* Deck Information */}
                                        {selectedDeckInfo && (
                                            <div className="mt-4 p-4 bg-gray-50 rounded-lg">
                                                <h4 className="font-medium text-gray-900 mb-2">Deck {selectedDeck} Features</h4>
                                                <ul className="text-sm text-gray-600 space-y-1">
                                                    {selectedDeckInfo.features?.map((feature, index) => (
                                                        <li key={index} className="flex items-start">
                                                            <FaCircle className="h-2 w-2 mt-1.5 mr-2 text-blue-500 flex-shrink-0" />
                                                            <span>{feature}</span>
                                                        </li>
                                                    ))}
                                                </ul>
                                                
                                                {selectedDeckInfo.note && (
                                                    <div className="mt-3 text-xs text-gray-500 italic">
                                                        {selectedDeckInfo.note}
                                                    </div>
                                                )}
                                            </div>
                                        )}
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
                                <h3 className="text-lg font-semibold mb-4">Deck Plan Tips</h3>
                                <ul className="space-y-3">
                                    <li className="flex items-start">
                                        <FaLightbulb className="text-yellow-500 mt-1 mr-2 flex-shrink-0" />
                                        <span>Midship cabins typically experience less motion than those at the front or back of the ship.</span>
                                    </li>
                                    <li className="flex items-start">
                                        <FaLightbulb className="text-yellow-500 mt-1 mr-2 flex-shrink-0" />
                                        <span>Cabins near elevators and public areas may experience more noise.</span>
                                    </li>
                                    <li className="flex items-start">
                                        <FaLightbulb className="text-yellow-500 mt-1 mr-2 flex-shrink-0" />
                                        <span>Higher decks offer better views but may feel more movement in rough seas.</span>
                                    </li>
                                    <li className="flex items-start">
                                        <FaLightbulb className="text-yellow-500 mt-1 mr-2 flex-shrink-0" />
                                        <span>Connecting staterooms are ideal for families or groups traveling together.</span>
                                    </li>
                                </ul>
                            </div>
                            
                            <div className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
                                <h3 className="text-lg font-semibold mb-4">Accessibility Information</h3>
                                <p className="text-gray-600 mb-4">Our ships feature accessible staterooms and public areas for guests with mobility challenges. Accessible staterooms include:</p>
                                <ul className="space-y-2 text-sm text-gray-600">
                                    <li className="flex items-start">
                                        <FaCheckCircle className="text-green-500 mt-1 mr-2 flex-shrink-0" />
                                        <span>Wider doorways (minimum 32" clear width)</span>
                                    </li>
                                    <li className="flex items-start">
                                        <FaCheckCircle className="text-green-500 mt-1 mr-2 flex-shrink-0" />
                                        <span>Roll-in showers with grab bars and fold-down seats</span>
                                    </li>
                                    <li className="flex items-start">
                                        <FaCheckCircle className="text-green-500 mt-1 mr-2 flex-shrink-0" />
                                        <span>Lowered sinks and vanities</span>
                                    </li>
                                    <li className="flex items-start">
                                        <FaCheckCircle className="text-green-500 mt-1 mr-2 flex-shrink-0" />
                                        <span>Emergency call buttons</span>
                                    </li>
                                </ul>
                                <button className="mt-4 text-blue-600 hover:text-blue-800 font-medium text-sm flex items-center">
                                    View accessible staterooms <FaArrowRight className="ml-1" />
                                </button>
                            </div>
                        </div>
                    </div>
                );
                
            case 'reviews':
                return (
                    <div>
                        <div className="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
                            <div>
                                <h2 className="text-2xl font-bold">Customer Reviews</h2>
                                <div className="flex items-center mt-1">
                                    <div className="flex items-center">
                                        {[...Array(5)].map((_, i) => (
                                            <FaStar 
                                                key={i} 
                                                className={`h-5 w-5 ${i < Math.floor(cruiseData.rating.average) ? 'text-yellow-400' : 'text-gray-300'}`} 
                                            />
                                        ))}
                                    </div>
                                    <span className="ml-2 text-gray-600">
                                        {cruiseData.rating.average.toFixed(1)} out of 5 ({cruiseData.rating.count} reviews)
                                    </span>
                                </div>
                            </div>
                            <button 
                                onClick={() => setShowReviewForm(true)}
                                className="mt-4 md:mt-0 bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-colors flex items-center"
                            >
                                <FaEdit className="mr-2" /> Write a Review
                            </button>
                        </div>

            case 'faq':
                return (
                    <div>
                        <div className="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
                            <div>
                                <h2 className="text-2xl font-bold">Frequently Asked Questions</h2>
                                <p className="text-gray-600 mt-1">Find answers to common questions about this cruise</p>
                            </div>
                            <div className="mt-4 md:mt-0">
                                <div className="relative">
                                    <input
                                        type="text"
                                        placeholder="Search FAQs..."
                                        className="w-full md:w-64 pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                        value={faqSearch}
                                        onChange={(e) => setFaqSearch(e.target.value)}
                                    />
                                    <FaSearch className="absolute left-3 top-3 text-gray-400" />
                                </div>
                            </div>
                        </div>

                        {/* FAQ Categories */}
                        <div className="flex flex-wrap gap-2 mb-6">
                            <button 
                                className={`px-4 py-2 rounded-full text-sm font-medium ${
                                    faqCategory === 'all' 
                                        ? 'bg-blue-600 text-white' 
                                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                                }`}
                                onClick={() => setFaqCategory('all')}
                            >
                                All Questions
                            </button>
                            {['Booking', 'Cabin', 'Dining', 'Onboard', 'Shore Excursions', 'Policies'].map((category) => (
                                <button
                                    key={category}
                                    className={`px-4 py-2 rounded-full text-sm font-medium ${
                                        faqCategory === category.toLowerCase() 
                                            ? 'bg-blue-600 text-white' 
                                            : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                                    }`}
                                    onClick={() => setFaqCategory(category.toLowerCase())}
                                >
                                    {category}
                                </button>
                            ))}
                        </div>

                        {/* FAQ List */}
                        <div className="space-y-4">
                            {cruiseData.faqs
                                .filter(faq => {
                                    const matchesSearch = faq.question.toLowerCase().includes(faqSearch.toLowerCase()) || 
                                                        faq.answer.toLowerCase().includes(faqSearch.toLowerCase());
                                    const matchesCategory = faqCategory === 'all' || faq.category === faqCategory;
                                    return matchesSearch && matchesCategory;
                                })
                                .map((faq, index) => (
                                    <div key={index} className="bg-white border border-gray-200 rounded-lg overflow-hidden">
                                        <button
                                            className="w-full px-6 py-4 text-left focus:outline-none"
                                            onClick={() => toggleFaq(index)}
                                        >
                                            <div className="flex items-center justify-between">
                                                <h3 className="text-lg font-medium text-gray-900">{faq.question}</h3>
                                                <span className="ml-4 text-gray-400">
                                                    {expandedFaqs.includes(index) ? <FaMinus /> : <FaPlus />}
                                                </span>
                                            </div>
                                            <div className="mt-1 flex items-center">
                                                <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                                    {faq.category}
                                                </span>
                                            </div>
                                        </button>
                                        {expandedFaqs.includes(index) && (
                                            <div className="px-6 pb-4 pt-0">
                                                <div className="prose max-w-none text-gray-700">
                                                    {faq.answer}
                                                </div>
                                                {faq.link && (
                                                    <a 
                                                        href={faq.link.url} 
                                                        target="_blank" 
                                                        rel="noopener noreferrer"
                                                        className="mt-3 inline-flex items-center text-blue-600 hover:text-blue-800 text-sm font-medium"
                                                    >
                                                        {faq.link.text} <FaExternalLinkAlt className="ml-1 text-xs" />
                                                    </a>
                                                )}
                                                <div className="mt-4 flex items-center">
                                                    <button 
                                                        className="text-sm text-gray-500 hover:text-blue-600 flex items-center"
                                                        onClick={(e) => {
                                                            e.stopPropagation();
                                                            setHelpfulFaq(helpfulFaq === index ? null : index);
                                                        }}
                                                    >
                                                        <FaThumbsUp className={`mr-1 ${helpfulFaq === index ? 'text-blue-500' : ''}`} />
                                                        {helpfulFaq === index ? 'Thank you!' : 'Helpful?'}
                                                    </button>
                                                    <span className="mx-2 text-gray-300">•</span>
                                                    <button 
                                                        className="text-sm text-gray-500 hover:text-blue-600"
                                                        onClick={(e) => {
                                                            e.stopPropagation();
                                                            setReportedFaq(reportedFaq === index ? null : index);
                                                        }}
                                                    >
                                                        {reportedFaq === index ? 'Reported' : 'Report'}
                                                    </button>
                                                </div>
                                            </div>
                                        )}
                                    </div>
                                ))}
                            
                            {/* No Results Message */}
                            {cruiseData.faqs.filter(faq => {
                                const matchesSearch = faq.question.toLowerCase().includes(faqSearch.toLowerCase()) || 
                                                    faq.answer.toLowerCase().includes(faqSearch.toLowerCase());
                                const matchesCategory = faqCategory === 'all' || faq.category === faqCategory;
                                return matchesSearch && matchesCategory;
                            }).length === 0 && (
                                <div className="text-center py-12 bg-white rounded-lg border border-gray-200">
                                    <FaQuestionCircle className="mx-auto h-12 w-12 text-gray-400" />
                                    <h3 className="mt-2 text-lg font-medium text-gray-900">No questions found</h3>
                                    <p className="mt-1 text-gray-500">Try adjusting your search or filter criteria</p>
                                </div>
                            )}
                        </div>

                        {/* Review Summary */}
                        <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-8">
                            <h3 className="text-lg font-semibold mb-4">Rating Summary</h3>
                            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                                <div>
                                    {['5', '4', '3', '2', '1'].map((star) => (
                                        <div key={star} className="flex items-center mb-2">
                                            <span className="w-8 text-sm text-gray-600">{star} star</span>
                                            <div className="flex-1 h-2 bg-gray-200 rounded-full mx-2 overflow-hidden">
                                                <div 
                                                    className="h-full bg-blue-500"
                                                    style={{
                                                        width: `${(cruiseData.rating.distribution[star] / cruiseData.rating.count) * 100}%`
                                                    }}
                                                ></div>
                                            </div>
                                            <span className="text-sm text-gray-600 w-10 text-right">
                                                {Math.round((cruiseData.rating.distribution[star] / cruiseData.rating.count) * 100)}%
                                            </span>
                                        </div>
                                    ))}
                                </div>
                                <div>
                                    <h4 className="font-medium text-gray-800 mb-3">What travelers are saying</h4>
                                    <div className="space-y-4">
                                        {['Service', 'Cabin Comfort', 'Dining', 'Entertainment', 'Shore Excursions'].map((category) => (
                                            <div key={category} className="flex items-center">
                                                <span className="w-32 text-sm text-gray-600">{category}</span>
                                                <div className="flex-1 flex items-center">
                                                    <div className="flex">
                                                        {[...Array(5)].map((_, i) => (
                                                            <FaStar 
                                                                key={i} 
                                                                className={`h-4 w-4 ${i < 4 ? 'text-yellow-400' : 'text-gray-300'}`} 
                                                            />
                                                        ))}
                                                    </div>
                                                    <span className="ml-2 text-sm font-medium">4.0</span>
                                                </div>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            </div>
                        </div>

                        {/* Review Filter/Sort */}
                        <div className="flex flex-col sm:flex-row sm:items-center justify-between mb-6 bg-white p-4 rounded-lg border border-gray-200">
                            <div className="mb-3 sm:mb-0">
                                <span className="text-sm text-gray-600 mr-2">Filter by:</span>
                                <select 
                                    className="border border-gray-300 rounded-md py-1 px-3 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                    value={reviewFilter}
                                    onChange={(e) => setReviewFilter(e.target.value)}
                                >
                                    <option value="all">All Ratings</option>
                                    <option value="5">5 Stars</option>
                                    <option value="4">4 Stars</option>
                                    <option value="3">3 Stars</option>
                                    <option value="2">2 Stars</option>
                                    <option value="1">1 Star</option>
                                </select>
                            </div>
                            <div>
                                <span className="text-sm text-gray-600 mr-2">Sort by:</span>
                                <select 
                                    className="border border-gray-300 rounded-md py-1 px-3 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                    value={reviewSort}
                                    onChange={(e) => setReviewSort(e.target.value)}
                                >
                                    <option value="newest">Newest First</option>
                                    <option value="highest">Highest Rated</option>
                                    <option value="lowest">Lowest Rated</option>
                                    <option value="most_helpful">Most Helpful</option>
                                </select>
                            </div>
                        </div>

                        {/* Reviews List */}
                        <div className="space-y-6">
                            {cruiseData.reviews
                                .filter(review => reviewFilter === 'all' || review.rating === parseInt(reviewFilter))
                                .sort((a, b) => {
                                    if (reviewSort === 'newest') return new Date(b.date) - new Date(a.date);
                                    if (reviewSort === 'highest') return b.rating - a.rating;
                                    if (reviewSort === 'lowest') return a.rating - b.rating;
                                    return (b.helpful || 0) - (a.helpful || 0);
                                })
                                .map((review) => (
                                    <div key={review.id} className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
                                        <div className="flex flex-col sm:flex-row sm:items-start sm:justify-between">
                                            <div>
                                                <h4 className="font-semibold">{review.author}</h4>
                                                <div className="flex items-center mt-1">
                                                    <div className="flex">
                                                        {[...Array(5)].map((_, i) => (
                                                            <FaStar 
                                                                key={i} 
                                                                className={`h-4 w-4 ${i < review.rating ? 'text-yellow-400' : 'text-gray-300'}`} 
                                                            />
                                                        ))}
                                                    </div>
                                                    <span className="ml-2 text-sm text-gray-500">
                                                        {new Date(review.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
                                                    </span>
                                                </div>
                                                {review.cabin && (
                                                    <div className="mt-1 text-sm text-gray-600">
                                                        Stayed in: {review.cabin}
                                                    </div>
                                                )}
                                            </div>
                                            {review.verified && (
                                                <div className="mt-2 sm:mt-0 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                                    <FaCheckCircle className="mr-1" /> Verified Passenger
                                                </div>
                                            )}
                                        </div>
                                        
                                        <h5 className="mt-3 font-medium text-gray-900">{review.title}</h5>
                                        <p className="mt-1 text-gray-700">{review.comment}</p>
                                        
                                        {review.response && (
                                            <div className="mt-4 p-4 bg-blue-50 border-l-4 border-blue-400 rounded-r">
                                                <div className="flex">
                                                    <div className="flex-shrink-0">
                                                        <FaShip className="h-5 w-5 text-blue-400" />
                                                    </div>
                                                    <div className="ml-3">
                                                        <h5 className="text-sm font-medium text-blue-800">Response from {cruiseData.cruiseLine}</h5>
                                                        <p className="mt-1 text-sm text-blue-700">{review.response}</p>
                                                        <p className="mt-2 text-xs text-blue-600">
                                                            {new Date(review.responseDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        )}
                                        
                                        <div className="mt-4 pt-3 border-t border-gray-100 flex items-center justify-between">
                                            <button 
                                                className="text-sm text-gray-500 hover:text-blue-600 flex items-center"
                                                onClick={() => setHelpfulReview(review.id)}
                                            >
                                                <FaThumbsUp className={`mr-1 ${helpfulReview === review.id ? 'text-blue-500' : ''}`} />
                                                Helpful ({review.helpful || 0})
                                            </button>
                                            <button 
                                                className="text-sm text-gray-500 hover:text-blue-600"
                                                onClick={() => setReportedReview(reportId => reportId === review.id ? null : review.id)}
                                            >
                                                {reportedReview === review.id ? 'Reported' : 'Report'}
                                            </button>
                                        </div>
                                    </div>
                                ))}
                            
                            {/* No Reviews Message */}
                            {cruiseData.reviews.length === 0 && (
                                <div className="text-center py-12 bg-white rounded-lg border border-gray-200">
                                    <FaCommentAlt className="mx-auto h-12 w-12 text-gray-400" />
                                    <h3 className="mt-2 text-lg font-medium text-gray-900">No reviews yet</h3>
                                    <p className="mt-1 text-gray-500">Be the first to share your experience!</p>
                                    <button 
                                        onClick={() => setShowReviewForm(true)}
                                        className="mt-4 bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-colors"
                                    >
                                        Write a Review
                                    </button>
                                </div>
                            )}
                            
                            {/* Load More Button */}
                            {cruiseData.reviews.length > 5 && (
                                <div className="text-center mt-8">
                                    <button className="bg-white hover:bg-gray-50 text-blue-600 font-medium py-2 px-6 border border-gray-300 rounded-md shadow-sm">
                                        Load More Reviews
                                    </button>
                                </div>
                            )}
                        </div>
                    </div>
                );
                
            default:
                return null;
        }
    };
    
    // Main component return
    return (
        <MainLayout>
            <Head title={`${cruiseData.title} | ${cruiseData.cruiseLine}`}>
                <meta name="description" content={`Book your dream cruise on ${cruiseData.ship} - ${cruiseData.duration} from ${cruiseData.departurePort}.`} />
                <meta property="og:title" content={`${cruiseData.title} | ${cruiseData.cruiseLine}`} />
                <meta property="og:description" content={cruiseData.description} />
                {cruiseData.images[0] && <meta property="og:image" content={cruiseData.images[0].url} />}
            </Head>

            {/* Hero Section with Image Gallery */}
            <div className="relative bg-gray-900">
                {/* Main Image */}
                <div className="relative h-96 overflow-hidden">
                    {cruiseData.images.length > 0 && (
                        <img
                            src={cruiseData.images[currentImageIndex].url}
                            alt={cruiseData.images[currentImageIndex].alt}
                            className="w-full h-full object-cover opacity-90"
                        />
                    )}
                    
                    {/* Navigation Arrows */}
                    {cruiseData.images.length > 1 && (
                        <>
                            <button 
                                onClick={prevImage}
                                className="absolute left-4 top-1/2 -translate-y-1/2 bg-black bg-opacity-50 text-white p-3 rounded-full hover:bg-opacity-75 transition-all focus:outline-none focus:ring-2 focus:ring-white"
                                aria-label="Previous image"
                            >
                                <FaChevronLeft className="w-6 h-6" />
                            </button>
                            <button 
                                onClick={nextImage}
                                className="absolute right-4 top-1/2 -translate-y-1/2 bg-black bg-opacity-50 text-white p-3 rounded-full hover:bg-opacity-75 transition-all focus:outline-none focus:ring-2 focus:ring-white"
                                aria-label="Next image"
                            >
                                <FaChevronRight className="w-6 h-6" />
                            </button>
                        </>
                    )}
                    
                    {/* Image Thumbnails */}
                    {cruiseData.images.length > 1 && (
                        <div className="absolute bottom-4 left-0 right-0 px-4">
                            <div className="flex space-x-2 overflow-x-auto pb-2">
                                {cruiseData.images.map((image, index) => (
                                    <button
                                        key={image.id}
                                        onClick={() => selectImage(index)}
                                        className={`flex-shrink-0 w-16 h-16 rounded overflow-hidden border-2 ${currentImageIndex === index ? 'border-blue-500' : 'border-transparent'}`}
                                        aria-label={`View image ${index + 1}`}
                                    >
                                        <img
                                            src={image.url}
                                            alt=""
                                            className="w-full h-full object-cover"
                                        />
                                    </button>
                                ))}
                            </div>
                        </div>
                    )}
                </div>
                
                {/* Cruise Info Overlay */}
                <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black to-transparent pt-16 pb-6 px-4 sm:px-6 lg:px-8">
                    <div className="max-w-7xl mx-auto">
                        <div className="flex flex-col md:flex-row md:items-end md:justify-between">
                            <div className="text-white">
                                <h1 className="text-3xl font-bold mb-1">{cruiseData.title}</h1>
                                <p className="text-lg text-gray-200 mb-2">{cruiseData.cruiseLine} • {cruiseData.ship}</p>
                                <div className="flex items-center">
                                    <div className="flex mr-2">
                                        {renderRatingStars(cruiseData.rating)}
                                    </div>
                                    <span className="text-gray-300">{cruiseData.rating} ({cruiseData.reviewCount} reviews)</span>
                                </div>
                            </div>
                            
                            <div className="mt-4 md:mt-0 flex space-x-3">
                                <button 
                                    onClick={toggleFavorite}
                                    className="bg-white bg-opacity-10 backdrop-blur-sm text-white p-3 rounded-full hover:bg-opacity-20 transition-colors"
                                    aria-label={isFavorite ? 'Remove from favorites' : 'Add to favorites'}
                                >
                                    {isFavorite ? (
                                        <FaHeart className="w-5 h-5 text-red-500" />
                                    ) : (
                                        <FaRegHeart className="w-5 h-5" />
                                    )}
                                </button>
                                
                                <div className="relative">
                                    <button 
                                        onClick={toggleShareMenu}
                                        className="bg-white bg-opacity-10 backdrop-blur-sm text-white p-3 rounded-full hover:bg-opacity-20 transition-colors"
                                        aria-label="Share"
                                        aria-expanded={showShareMenu}
                                    >
                                        <FaShare className="w-5 h-5" />
                                    </button>
                                    
                                    {showShareMenu && (
                                        <div className="absolute right-0 bottom-full mb-2 w-48 bg-white rounded-lg shadow-lg py-2 z-10">
                                            <button 
                                                onClick={() => handleShare('facebook')}
                                                className="w-full px-4 py-2 text-left hover:bg-gray-100 flex items-center"
                                            >
                                                <FaFacebookF className="text-blue-600 mr-2" /> Facebook
                                            </button>
                                            <button 
                                                onClick={() => handleShare('twitter')}
                                                className="w-full px-4 py-2 text-left hover:bg-gray-100 flex items-center"
                                            >
                                                <FaTwitter className="text-blue-400 mr-2" /> Twitter
                                            </button>
                                            <button 
                                                onClick={() => handleShare('pinterest')}
                                                className="w-full px-4 py-2 text-left hover:bg-gray-100 flex items-center"
                                            >
                                                <FaPinterestP className="text-red-600 mr-2" /> Pinterest
                                            </button>
                                            <button 
                                                onClick={() => handleShare('whatsapp')}
                                                className="w-full px-4 py-2 text-left hover:bg-gray-100 flex items-center"
                                            >
                                                <FaWhatsapp className="text-green-500 mr-2" /> WhatsApp
                                            </button>
                                            <button 
                                                onClick={() => handleShare('email')}
                                                className="w-full px-4 py-2 text-left hover:bg-gray-100 flex items-center"
                                            >
                                                <FaEnvelope className="text-gray-600 mr-2" /> Email
                                            </button>
                                        </div>
                                    )}
                                </div>
                                
                                <button 
                                    onClick={() => window.print()}
                                    className="bg-white bg-opacity-10 backdrop-blur-sm text-white p-3 rounded-full hover:bg-opacity-20 transition-colors"
                                    aria-label="Print"
                                >
                                    <FaPrint className="w-5 h-5" />
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <PageContainer>
                <div className="relative">
                    {/* Main Content */}
                    <div className="lg:pr-80">
                        {/* Tabs Navigation */}
                        <div className="border-b border-gray-200 mb-8">
                            <nav className="-mb-px flex space-x-8 overflow-x-auto">
                                {[
                                    { id: 'overview', label: 'Overview' },
                                    { id: 'itinerary', label: 'Itinerary' },
                                    { id: 'cabins', label: 'Cabins & Prices' },
                                    { id: 'deck-plan', label: 'Deck Plan' },
                                    { id: 'reviews', label: 'Reviews' },
                                    { id: 'faq', label: 'FAQ' },
                                ].map((tab) => (
                                    <button
                                        key={tab.id}
                                        onClick={() => setActiveTab(tab.id)}
                                        className={`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${activeTab === tab.id
                                            ? 'border-blue-500 text-blue-600'
                                            : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                                        }`}
                                    >
                                        {tab.label}
                                    </button>
                                ))}
                            </nav>
                        </div>
                        
                        {/* Tab Content */}
                        <div className="mb-12">
                            {renderTabContent()}
                        </div>
                    </div>
                    
                    {/* Sticky Booking Widget */}
                    <div className="lg:absolute lg:top-0 lg:right-0 lg:w-72 xl:w-80 lg:pl-6 lg:border-l lg:border-gray-200">
                        <div className="sticky top-6">
                            <div className="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
                                <div className="p-4 bg-blue-600 text-white">
                                    <h3 className="text-lg font-semibold">Book Your Cruise</h3>
                                    <p className="text-sm opacity-90">Starting from {formatPrice(cruiseData.price)}</p>
                                </div>
                                
                                <div className="p-4">
                                    <div className="space-y-4">
                                        <div>
                                            <label className="block text-sm font-medium text-gray-700 mb-1">Departure Date</label>
                                            <select className="w-full border border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                                <option>{cruiseData.departureDate}</option>
                                                <option>June 29, 2024</option>
                                                <option>July 13, 2024</option>
                                                <option>July 27, 2024</option>
                                                <option>August 10, 2024</option>
                                            </select>
                                        </div>
                                        
                                        <div>
                                            <label className="block text-sm font-medium text-gray-700 mb-1">Cabin Type</label>
                                            <select 
                                                className="w-full border border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                                value={selectedCabin}
                                                onChange={(e) => setSelectedCabin(e.target.value)}
                                            >
                                                {cruiseData.cabinTypes.map((cabin) => (
                                                    <option key={cabin.id} value={cabin.id}>
                                                        {cabin.name} - {formatPrice(cabin.price)}
                                                    </option>
                                                ))}
                                            </select>
                                        </div>
                                        
                                        <div className="grid grid-cols-2 gap-4">
                                            <div>
                                                <label className="block text-sm font-medium text-gray-700 mb-1">Adults</label>
                                                <select className="w-full border border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                                    <option>1</option>
                                                    <option>2</option>
                                                    <option>3</option>
                                                    <option>4</option>
                                                </select>
                                            </div>
                                            <div>
                                                <label className="block text-sm font-medium text-gray-700 mb-1">Children</label>
                                                <select className="w-full border border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                                    <option>0</option>
                                                    <option>1</option>
                                                    <option>2</option>
                                                    <option>3</option>
                                                </select>
                                            </div>
                                        </div>
                                        
                                        <div className="pt-2">
                                            <div className="flex justify-between mb-2">
                                                <span className="text-sm text-gray-600">Base Fare (x2)</span>
                                                <span className="text-sm font-medium">
                                                    {formatPrice(cruiseData.cabinTypes.find(c => c.id === selectedCabin)?.price * 2 || 0)}
                                                </span>
                                            </div>
                                            <div className="flex justify-between mb-2">
                                                <span className="text-sm text-gray-600">Taxes & Fees</span>
                                                <span className="text-sm font-medium">$198</span>
                                            </div>
                                            <div className="border-t border-gray-200 my-2"></div>
                                            <div className="flex justify-between font-semibold text-lg">
                                                <span>Total</span>
                                                <span>
                                                    {formatPrice((cruiseData.cabinTypes.find(c => c.id === selectedCabin)?.price || 0) * 2 + 198)}
                                                </span>
                                            </div>
                                            <p className="text-xs text-gray-500 mt-1">Includes all taxes and fees</p>
                                        </div>
                                        
                                        <button 
                                            className="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded-md transition-colors"
                                            onClick={() => alert('Proceeding to booking...')}
                                        >
                                            Book Now
                                        </button>
                                        
                                        <p className="text-xs text-gray-500 text-center">
                                            Secure booking with best price guarantee
                                        </p>
                                        
                                        <div className="flex items-center text-sm text-gray-600">
                                            <svg className="h-5 w-5 text-green-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                                            </svg>
                                            <span>Free cancellation up to 90 days before departure</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div className="bg-gray-50 p-4 border-t border-gray-200">
                                    <h4 className="font-medium text-sm text-gray-700 mb-2">Need help booking?</h4>
                                    <div className="flex items-center">
                                        <svg className="h-5 w-5 text-blue-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                            <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z" />
                                        </svg>
                                        <span className="text-blue-600 font-medium">1-800-CRUISES</span>
                                    </div>
                                </div>
                            </div>
                            
                            <div className="mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                                <h4 className="font-medium text-yellow-800 mb-2">Special Offer</h4>
                                <p className="text-sm text-yellow-700">
                                    Book now and get up to $200 onboard credit per stateroom. Use code <span className="font-mono font-bold">CRUISE2024</span> at checkout.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </PageContainer>
        </MainLayout>
    );
    
    const renderTabContent = () => {
        switch(activeTab) {
            case 'overview':
                return (
                    <div className="space-y-6">
                        <div>
                            <h3 className="text-xl font-semibold mb-4">About This Cruise</h3>
                            <p className="text-gray-700 mb-4">{cruiseData.description}</p>
                            
                            <div className="grid md:grid-cols-2 gap-6 mb-8">
                                <div>
                                    <h4 className="font-medium text-lg mb-2">Highlights</h4>
                                    <ul className="list-disc pl-5 space-y-2">
                                        {cruiseData.highlights.map((highlight, index) => (
                                            <li key={index} className="text-gray-700">{highlight}</li>
                                        ))}
                                    </ul>
                                </div>
                                
                                <div className="bg-gray-50 p-4 rounded-lg">
                                    <h4 className="font-medium text-lg mb-3">Quick Facts</h4>
                                    <div className="space-y-2">
                                        <p><span className="font-medium">Ship:</span> {cruiseData.ship}</p>
                                        <p><span className="font-medium">Duration:</span> {cruiseData.duration}</p>
                                        <p><span className="font-medium">Departs:</span> {cruiseData.departureDate}</p>
                                        <p><span className="font-medium">Returns:</span> {cruiseData.returnDate}</p>
                                        <p><span className="font-medium">Ports:</span> {cruiseData.ports.length} ports</p>
                                        <p><span className="font-medium">Rating:</span> {cruiseData.rating} ({cruiseData.reviewCount} reviews)</p>
                                    </div>
                                </div>
                            </div>
                            
                            <div className="mb-8">
                                <div className="flex justify-between items-center mb-3">
                                    <h4 className="font-medium text-lg">What's Included</h4>
                                    <button 
                                        onClick={() => toggleSection('inclusions')}
                                        className="text-blue-600 text-sm hover:underline"
                                    >
                                        {expandedSections.inclusions ? 'Show Less' : 'Show More'}
                                    </button>
                                </div>
                                <div className={`${expandedSections.inclusions ? 'max-h-96' : 'max-h-32'} overflow-hidden transition-all duration-300`}>
                                    <ul className="grid md:grid-cols-2 gap-2 list-disc pl-5">
                                        {cruiseData.inclusions.map((item, index) => (
                                            <li key={index} className="text-gray-700">{item}</li>
                                        ))}
                                    </ul>
                                </div>
                            </div>
                            
                            <div>
                                <div className="flex justify-between items-center mb-3">
                                    <h4 className="font-medium text-lg">What's Not Included</h4>
                                    <button 
                                        onClick={() => toggleSection('exclusions')}
                                        className="text-blue-600 text-sm hover:underline"
                                    >
                                        {expandedSections.exclusions ? 'Show Less' : 'Show More'}
                                    </button>
                                </div>
                                <div className={`${expandedSections.exclusions ? 'max-h-96' : 'max-h-32'} overflow-hidden transition-all duration-300`}>
                                    <ul className="grid md:grid-cols-2 gap-2 list-disc pl-5">
                                        {cruiseData.exclusions.map((item, index) => (
                                            <li key={index} className="text-gray-700">{item}</li>
                                        ))}
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                );
                
            case 'itinerary':
                return (
                    <div className="space-y-6">
                        <h3 className="text-xl font-semibold mb-4">Itinerary</h3>
                        
                        <div className="overflow-hidden rounded-lg border border-gray-200">
                            {cruiseData.itinerary.map((day, index) => (
                                <div key={index} className={`border-b border-gray-200 last:border-b-0 ${index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}`}>
                                    <button
                                        className="w-full px-6 py-4 text-left focus:outline-none"
                                        onClick={() => toggleSection(`day-${day.day}`)}
                                    >
                                        <div className="flex items-center justify-between">
                                            <div className="flex items-center">
                                                <span className="font-medium text-lg mr-4">Day {day.day}</span>
                                                <span className="font-medium">{day.port}</span>
                                                {day.arrival && day.departure && (
                                                    <span className="ml-4 text-sm text-gray-500">
                                                        {day.arrival} - {day.departure}
                                                    </span>
                                                )}
                                            </div>
                                            <svg
                                                className={`w-5 h-5 text-gray-500 transition-transform ${expandedSections.itinerary[`day-${day.day}`] ? 'transform rotate-180' : ''}`}
                                                fill="none"
                                                stroke="currentColor"
                                                viewBox="0 0 24 24"
                                                xmlns="http://www.w3.org/2000/svg"
                                            >
                                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                                            </svg>
                                        </div>
                                    </button>
                                    
                                    {expandedSections.itinerary[`day-${day.day}`] && (
                                        <div className="px-6 pb-4 pt-2">
                                            <p className="text-gray-700">{day.description}</p>
                                            
                                            {day.port !== 'At Sea' && (
                                                <div className="mt-4">
                                                    <h5 className="font-medium mb-2">Recommended Shore Excursions:</h5>
                                                    <ul className="space-y-2 pl-5">
                                                        <li className="text-blue-600 hover:underline">• {day.port} City Highlights Tour</li>
                                                        <li className="text-blue-600 hover:underline">• Local Cuisine Tasting Experience</li>
                                                        <li className="text-blue-600 hover:underline">• Scenic Views & Photo Spots</li>
                                                    </ul>
                                                </div>
                                            )}
                                        </div>
                                    )}
                                </div>
                            ))}
                        </div>
                        
                        <div className="mt-8 bg-blue-50 p-4 rounded-lg">
                            <h4 className="font-medium text-lg mb-2">Important Notes</h4>
                            <ul className="list-disc pl-5 space-y-1 text-sm text-gray-700">
                                <li>Itinerary is subject to change without notice.</li>
                                <li>Port arrival and departure times are approximate and may vary.</li>
                                <li>Shore excursions are available for purchase on board or in advance through our website.</li>
                                <li>Please ensure you return to the ship at least 30 minutes before departure time.</li>
                            </ul>
                        </div>
                    </div>
                );
                
            case 'cabins':
                return (
                    <div className="space-y-8">
                        <div>
                            <h3 className="text-xl font-semibold mb-4">Cabins & Prices</h3>
                            <p className="text-gray-700 mb-6">Choose the perfect accommodation for your cruise. All staterooms include a private bathroom, TV, phone, safe, and 24-hour room service.</p>
                            
                            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                                {cruiseData.cabinTypes.map((cabin) => (
                                    <div 
                                        key={cabin.id}
                                        className={`border rounded-lg overflow-hidden transition-all duration-200 ${selectedCabin === cabin.id ? 'ring-2 ring-blue-500 shadow-lg' : 'hover:shadow-md'}`}
                                        onClick={() => setSelectedCabin(cabin.id)}
                                    >
                                        <div className="relative">
                                            <img 
                                                src={cabin.image} 
                                                alt={cabin.name} 
                                                className="w-full h-48 object-cover"
                                            />
                                            {cabin.bestValue && (
                                                <div className="absolute top-2 right-2 bg-yellow-400 text-yellow-900 text-xs font-bold px-2 py-1 rounded">
                                                    BEST VALUE
                                                </div>
                                            )}
                                        </div>
                                        <div className="p-4">
                                            <div className="flex justify-between items-start">
                                                <h4 className="font-medium text-lg">{cabin.name}</h4>
                                                {cabin.isSuite && (
                                                    <span className="text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded">Suite</span>
                                                )}
                                            </div>
                                            <p className="text-sm text-gray-600 mt-1 line-clamp-2">{cabin.description}</p>
                                            
                                            <div className="mt-3 text-sm">
                                                <p><span className="font-medium">Size:</span> {cabin.size}</p>
                                                {cabin.balcony && <p><span className="font-medium">Balcony:</span> {cabin.balcony}</p>}
                                                <p><span className="font-medium">Occupancy:</span> {cabin.occupancy}</p>
                                            </div>
                                            
                                            <div className="mt-4">
                                                {cabin.originalPrice > cabin.price ? (
                                                    <div>
                                                        <span className="text-gray-400 line-through mr-2">{formatPrice(cabin.originalPrice)}</span>
                                                        <span className="text-xl font-bold text-blue-600">{formatPrice(cabin.price)}</span>
                                                        <span className="ml-2 text-sm text-green-600">Save {Math.round((cabin.originalPrice - cabin.price) / cabin.originalPrice * 100)}%</span>
                                                    </div>
                                                ) : (
                                                    <div className="text-xl font-bold text-blue-600">{formatPrice(cabin.price)}</div>
                                                )}
                                                <p className="text-xs text-gray-500 mt-1">Per person, based on double occupancy</p>
                                            </div>
                                        </div>
                                    </div>
                                ))}
                            </div>
                            
                            {selectedCabin && (
                                <div className="bg-gray-50 p-6 rounded-lg">
                                    <h4 className="font-medium text-lg mb-4">Selected Cabin: {cruiseData.cabinTypes.find(c => c.id === selectedCabin)?.name}</h4>
                                    <div className="grid md:grid-cols-2 gap-6">
                                        <div>
                                            <h5 className="font-medium mb-2">Cabin Amenities:</h5>
                                            <ul className="list-disc pl-5 space-y-1">
                                                <li>Private bathroom with shower</li>
                                                <li>Flat-screen TV with satellite channels</li>
                                                <li>Telephone and safe</li>
                                                <li>Hair dryer</li>
                                                <li>24-hour room service</li>
                                                <li>Daily housekeeping</li>
                                                {selectedCabin === 'oceanview' || selectedCabin === 'balcony' || selectedCabin === 'suite' ? (
                                                    <li>Complimentary bathrobes</li>
                                                ) : null}
                                                {selectedCabin === 'balcony' || selectedCabin === 'suite' ? (
                                                    <li>Private balcony with seating</li>
                                                ) : null}
                                                {selectedCabin === 'suite' ? (
                                                    <>
                                                        <li>Separate living area</li>
                                                        <li>Priority boarding and disembarkation</li>
                                                        <li>Complimentary specialty dining</li>
                                                        <li>Concierge service</li>
                                                    </>
                                                ) : null}
                                            </ul>
                                        </div>
                                        <div>
                                            <h5 className="font-medium mb-2">Pricing Details:</h5>
                                            <div className="space-y-2">
                                                <div className="flex justify-between">
                                                    <span>Base Fare (per person):</span>
                                                    <span>{formatPrice(cruiseData.cabinTypes.find(c => c.id === selectedCabin)?.price || 0)}</span>
                                                </div>
                                                <div className="flex justify-between">
                                                    <span>Taxes & Fees (per person):</span>
                                                    <span>{formatPrice(99)}</span>
                                                </div>
                                                <div className="border-t border-gray-200 my-2"></div>
                                                <div className="flex justify-between font-medium">
                                                    <span>Total for 2 guests:</span>
                                                    <span>{formatPrice((cruiseData.cabinTypes.find(c => c.id === selectedCabin)?.price || 0) * 2 + 198)}</span>
                                                </div>
                                                <div className="text-sm text-gray-600">
                                                    <p className="mt-2">Deposit required to book: {formatPrice(500)}</p>
                                                    <p>Final payment due 90 days before departure</p>
                                                </div>
                                            </div>
                                            
                                            <button 
                                                className="mt-4 w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition-colors"
                                                onClick={() => alert('Proceeding to booking...')}
                                            >
                                                Book Now
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            )}
                        </div>
                        
                        <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-200">
                            <h4 className="font-medium text-lg mb-2">Special Offers</h4>
                            <ul className="list-disc pl-5 space-y-1">
                                <li>Free cabin upgrade (subject to availability)</li>
                                <li>Onboard credit up to $200 per stateroom</li>
                                <li>Free specialty dining for suite guests</li>
                                <li>50% off second guest</li>
                                <li>Kids sail free (limited availability)</li>
                            </ul>
                            <p className="mt-2 text-sm text-gray-600">*Offers are combinable with select promotions. Some restrictions may apply.</p>
                        </div>
                    </div>
                );
                
            case 'deck-plan':
                return (
                    <div className="space-y-6">
                        <div>
                            <h3 className="text-xl font-semibold mb-4">Deck Plan</h3>
                            <p className="text-gray-700 mb-6">Explore the layout of {cruiseData.ship}. Click on a deck to view details or download the full deck plan.</p>
                            
                            <div className="flex flex-col md:flex-row gap-6">
                                <div className="md:w-1/4">
                                    <div className="border rounded-lg overflow-hidden">
                                        <div className="bg-gray-100 p-3 border-b">
                                            <h4 className="font-medium">Decks</h4>
                                        </div>
                                        <div className="max-h-96 overflow-y-auto">
                                            {cruiseData.deckPlan.decks.map((deck, index) => (
                                                <div 
                                                    key={deck.number} 
                                                    className="p-3 border-b hover:bg-gray-50 cursor-pointer flex justify-between items-center"
                                                >
                                                    <span>Deck {deck.number}</span>
                                                    <span className="text-sm text-gray-500">{deck.name}</span>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                    
                                    <div className="mt-4 p-4 bg-blue-50 rounded-lg">
                                        <h5 className="font-medium mb-2">Legend</h5>
                                        <ul className="space-y-2 text-sm">
                                            <li className="flex items-center">
                                                <span className="w-4 h-4 bg-blue-200 mr-2"></span> Public Areas
                                            </li>
                                            <li className="flex items-center">
                                                <span className="w-4 h-4 bg-green-200 mr-2"></span> Staterooms
                                            </li>
                                            <li className="flex items-center">
                                                <span className="w-4 h-4 bg-yellow-200 mr-2"></span> Dining
                                            </li>
                                            <li className="flex items-center">
                                                <span className="w-4 h-4 bg-red-200 mr-2"></span> Entertainment
                                            </li>
                                            <li className="flex items-center">
                                                <span className="w-4 h-4 bg-purple-200 mr-2"></span> Recreation
                                            </li>
                                        </ul>
                                        
                                        <a 
                                            href={cruiseData.deckPlan.pdf} 
                                            target="_blank" 
                                            rel="noopener noreferrer"
                                            className="mt-4 inline-block text-blue-600 hover:underline text-sm"
                                        >
                                            Download Full Deck Plan (PDF)
                                        </a>
                                    </div>
                                </div>
                                
                                <div className="md:flex-1 bg-gray-100 rounded-lg flex items-center justify-center p-4">
                                    <div className="relative w-full max-w-4xl">
                                        <img 
                                            src={cruiseData.deckPlan.image} 
                                            alt={`${cruiseData.ship} Deck Plan`} 
                                            className="w-full h-auto border border-gray-300 rounded"
                                        />
                                        <div className="absolute inset-0">
                                            {/* Interactive deck plan elements would go here */}
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div className="mt-8">
                                <h4 className="font-medium text-lg mb-3">Deck-by-Deck Guide</h4>
                                <div className="space-y-4">
                                    {cruiseData.deckPlan.decks.slice(0, 5).map((deck) => (
                                        <div key={deck.number} className="border rounded-lg overflow-hidden">
                                            <div className="bg-gray-50 p-3 border-b">
                                                <h5 className="font-medium">Deck {deck.number}: {deck.name}</h5>
                                            </div>
                                            <div className="p-4">
                                                <p className="text-gray-700">
                                                    {deck.name} features a variety of amenities including 
                                                    {deck.number % 2 === 0 ? ' staterooms, lounges, and dining options.' : ' entertainment venues, pools, and recreational facilities.'}
                                                </p>
                                            </div>
                                        </div>
                                    ))}
                                </div>
                                
                                <div className="mt-6 text-center">
                                    <button className="text-blue-600 hover:underline">
                                        View All Decks
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                );
                
            case 'reviews':
                return (
                    <div className="space-y-8">
                        <div>
                            <h3 className="text-xl font-semibold mb-4">Guest Reviews</h3>
                            
                            <div className="bg-white rounded-lg shadow-sm p-6 mb-8">
                                <div className="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
                                    <div className="mb-4 md:mb-0">
                                        <div className="flex items-center">
                                            <div className="text-4xl font-bold mr-4">{cruiseData.rating}</div>
                                            <div>
                                                <div className="flex">
                                                    {renderRatingStars(cruiseData.rating)}
                                                </div>
                                                <p className="text-sm text-gray-600 mt-1">Based on {cruiseData.reviewCount} reviews</p>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <button className="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-lg transition-colors">
                                        Write a Review
                                    </button>
                                </div>
                                
                                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                                    {[5, 4, 3, 2, 1].map((rating) => (
                                        <div key={rating} className="flex items-center">
                                            <span className="w-16 text-sm font-medium">{rating} Star{rating !== 1 ? 's' : ''}</span>
                                            <div className="flex-1 h-2.5 bg-gray-200 rounded-full mx-2">
                                                <div 
                                                    className="h-full bg-yellow-400 rounded-full" 
                                                    style={{ width: `${(cruiseData.reviews.filter(r => Math.round(r.rating) === rating).length / cruiseData.reviewCount) * 100}%` }}
                                                ></div>
                                            </div>
                                            <span className="w-8 text-sm text-gray-600">
                                                {Math.round((cruiseData.reviews.filter(r => Math.round(r.rating) === rating).length / cruiseData.reviewCount) * 100)}%
                                            </span>
                                        </div>
                                    ))}
                                </div>
                            </div>
                            
                            <div className="space-y-6">
                                {cruiseData.reviews.map((review) => (
                                    <div key={review.id} className="border-b border-gray-200 pb-6">
                                        <div className="flex justify-between items-start mb-2">
                                            <div>
                                                <h4 className="font-medium text-lg">{review.title}</h4>
                                                <div className="flex items-center mt-1">
                                                    <div className="flex mr-2">
                                                        {renderRatingStars(review.rating)}
                                                    </div>
                                                    <span className="text-sm text-gray-500">
                                                        {review.author} • {new Date(review.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <p className="text-gray-700 mt-2">{review.content}</p>
                                        <div className="flex space-x-4 mt-3 text-sm">
                                            <button className="text-blue-600 hover:underline">Helpful</button>
                                            <button className="text-gray-500 hover:text-gray-700">Report</button>
                                        </div>
                                    </div>
                                ))}
                                
                                <div className="flex justify-center mt-8">
                                    <button className="bg-white border border-gray-300 text-gray-700 font-medium py-2 px-6 rounded-lg hover:bg-gray-50 transition-colors">
                                        Load More Reviews
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                );
                
            case 'faq':
                return (
                    <div className="space-y-6">
                        <div>
                            <h3 className="text-xl font-semibold mb-6">Frequently Asked Questions</h3>
                            
                            <div className="space-y-4">
                                {cruiseData.faqs.map((faq, index) => (
                                    <div key={index} className="border border-gray-200 rounded-lg overflow-hidden">
                                        <button 
                                            className="w-full px-5 py-4 text-left flex justify-between items-center bg-white hover:bg-gray-50 focus:outline-none"
                                            onClick={() => toggleSection(`faq-${index}`)}
                                        >
                                            <span className="font-medium">{faq.question}</span>
                                            <svg 
                                                className={`w-5 h-5 text-gray-500 transition-transform ${expandedSections.itinerary[`faq-${index}`] ? 'transform rotate-180' : ''}`}
                                                fill="none" 
                                                stroke="currentColor" 
                                                viewBox="0 0 24 24" 
                                                xmlns="http://www.w3.org/2000/svg"
                                            >
                                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                                            </svg>
                                        </button>
                                        {expandedSections.itinerary[`faq-${index}`] && (
                                            <div className="px-5 pb-4 pt-2 bg-gray-50">
                                                <p className="text-gray-700">{faq.answer}</p>
                                            </div>
                                        )}
                                    </div>
                                ))}
                            </div>
                            
                            <div className="mt-8 bg-blue-50 p-6 rounded-lg">
                                <h4 className="font-medium text-lg mb-3">Still have questions?</h4>
                                <p className="text-gray-700 mb-4">Our cruise specialists are available to help you with any questions about this cruise.</p>
                                <div className="flex flex-col sm:flex-row gap-3">
                                    <button className="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-lg transition-colors">
                                        Contact Us
                                    </button>
                                    <button className="bg-white hover:bg-gray-100 text-blue-600 border border-blue-600 font-medium py-2 px-6 rounded-lg transition-colors">
                                        Call Us: 1-800-CRUISES
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                );
                
            default:
                return null;
        }
    };
